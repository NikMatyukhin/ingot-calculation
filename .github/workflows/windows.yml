name: OCI

on: [push]

jobs:
  syntax_linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install grep
        run: |
          sudo apt install grep
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint flake8
          pip install -r requirements.txt
#          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Check
        run: |
          grep --version
          python --version
          python -m pylint --version
          python -m flake8 --version
#          echo "E1234" | grep --color=auto -c -E "[EF][0-9]{4}"
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Lint with pylint
        uses: sunnysid3up/python-linter@master
        with:
          pylint-options: "--rcfile=.pylintrc"
#      - name: Hard lint with pylint
#        run: |
#          # проверка синтаксических и критических ошибок
#          for var in $(find . -name "*.py" -not -path "./.venv/*" -not -path "./gui/*" -not -path "./dsc_example.py" -not -path "./test.py")
#          do
#          echo " $var"
#          ! pylint --rcfile=.pylintrc --disable=all --enable=E $var | grep -c -E "[EF][0-9]{4}"
#          done
#      - name: Hard lint PEP8 with pylint
#        run: |
#          # проверка стиля кодирования по PEP8
#          for var in $(find . -name "*.py" -not -path "./.venv/*" -not -path "./gui/*" -not -path "./dsc_example.py" -not -path "./test.py")
#          do
#          echo " $var"
#          ! pylint --rcfile=.pylintrc --disable=all --enable=C $var | grep -c -E "C[0-9]{4}"
#          done
